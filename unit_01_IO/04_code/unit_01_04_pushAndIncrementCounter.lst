;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 15/11/2019 11:33:48 AM
;----------------------------------------------

;Address Opcode 	ASM
0x0000	0xF000EF44  	GOTO        136
0x0004	0x0000      	NOP
0x0006	0x0000      	NOP
0x0008	0xF000EF00  	GOTO        0
0x000C	0x0000      	NOP
0x000E	0x0000      	NOP
0x0010	0x0000      	NOP
0x0012	0x0000      	NOP
0x0014	0x0000      	NOP
0x0016	0x0000      	NOP
0x0018	0xD7F3      	BRA         0
_increment:
;unit_01_04_pushAndIncrementCounter.c,58 :: 		void increment (unsigned char counter)
;unit_01_04_pushAndIncrementCounter.c,60 :: 		switch (counter)
0x001C	0xD013      	BRA         L_increment0
;unit_01_04_pushAndIncrementCounter.c,62 :: 		case 1:{PORTD.RD0 = 1; break;}
L_increment2:
0x001E	0x8083      	BSF         PORTD, 0 
0x0020	0xD02A      	BRA         L_increment1
;unit_01_04_pushAndIncrementCounter.c,63 :: 		case 2:{PORTD.RD1 = 1; break;}
L_increment3:
0x0022	0x8283      	BSF         PORTD, 1 
0x0024	0xD028      	BRA         L_increment1
;unit_01_04_pushAndIncrementCounter.c,64 :: 		case 3:{PORTD.RD2 = 1; break;}
L_increment4:
0x0026	0x8483      	BSF         PORTD, 2 
0x0028	0xD026      	BRA         L_increment1
;unit_01_04_pushAndIncrementCounter.c,65 :: 		case 4:{PORTD.RD3 = 1; break;}
L_increment5:
0x002A	0x8683      	BSF         PORTD, 3 
0x002C	0xD024      	BRA         L_increment1
;unit_01_04_pushAndIncrementCounter.c,66 :: 		case 5:{PORTD.RD4 = 1; break;}
L_increment6:
0x002E	0x8883      	BSF         PORTD, 4 
0x0030	0xD022      	BRA         L_increment1
;unit_01_04_pushAndIncrementCounter.c,67 :: 		case 6:{PORTD.RD5 = 1; break;}
L_increment7:
0x0032	0x8A83      	BSF         PORTD, 5 
0x0034	0xD020      	BRA         L_increment1
;unit_01_04_pushAndIncrementCounter.c,68 :: 		case 7:{PORTD.RD6 = 1; break;}
L_increment8:
0x0036	0x8C83      	BSF         PORTD, 6 
0x0038	0xD01E      	BRA         L_increment1
;unit_01_04_pushAndIncrementCounter.c,69 :: 		case 8:{PORTD.RD7 = 1; break;}
L_increment9:
0x003A	0x8E83      	BSF         PORTD, 7 
0x003C	0xD01C      	BRA         L_increment1
;unit_01_04_pushAndIncrementCounter.c,70 :: 		default: {PORTD = 0; MyCounter = 0; break;}
L_increment10:
0x003E	0x6A83      	CLRF        PORTD 
0x0040	0x6A15      	CLRF        _myCounter 
0x0042	0xD019      	BRA         L_increment1
;unit_01_04_pushAndIncrementCounter.c,71 :: 		}
L_increment0:
0x0044	0x5017      	MOVF        FARG_increment_counter, 0 
0x0046	0x0A01      	XORLW       1
0x0048	0xE0EA      	BZ          L_increment2
0x004A	0x5017      	MOVF        FARG_increment_counter, 0 
0x004C	0x0A02      	XORLW       2
0x004E	0xE0E9      	BZ          L_increment3
0x0050	0x5017      	MOVF        FARG_increment_counter, 0 
0x0052	0x0A03      	XORLW       3
0x0054	0xE0E8      	BZ          L_increment4
0x0056	0x5017      	MOVF        FARG_increment_counter, 0 
0x0058	0x0A04      	XORLW       4
0x005A	0xE0E7      	BZ          L_increment5
0x005C	0x5017      	MOVF        FARG_increment_counter, 0 
0x005E	0x0A05      	XORLW       5
0x0060	0xE0E6      	BZ          L_increment6
0x0062	0x5017      	MOVF        FARG_increment_counter, 0 
0x0064	0x0A06      	XORLW       6
0x0066	0xE0E5      	BZ          L_increment7
0x0068	0x5017      	MOVF        FARG_increment_counter, 0 
0x006A	0x0A07      	XORLW       7
0x006C	0xE0E4      	BZ          L_increment8
0x006E	0x5017      	MOVF        FARG_increment_counter, 0 
0x0070	0x0A08      	XORLW       8
0x0072	0xE0E3      	BZ          L_increment9
0x0074	0xD7E4      	BRA         L_increment10
L_increment1:
;unit_01_04_pushAndIncrementCounter.c,72 :: 		}
L_end_increment:
0x0076	0x0012      	RETURN      0
; end of _increment
___CC2DW:
;__Lib_System.c,21 :: 		
;__Lib_System.c,23 :: 		
_CC2DL_Loop1:
;__Lib_System.c,24 :: 		
0x0078	0x0009      	TBLRD*+
;__Lib_System.c,25 :: 		
0x007A	0xFFE6CFF5  	MOVFF       TABLAT, POSTINC1
;__Lib_System.c,26 :: 		
0x007E	0x0600      	DECF        R0, 1, 0
;__Lib_System.c,27 :: 		
0x0080	0xE1FB      	BNZ         _CC2DL_Loop1
;__Lib_System.c,28 :: 		
0x0082	0x0601      	DECF        R1, 1, 0
;__Lib_System.c,29 :: 		
0x0084	0xE1F9      	BNZ         _CC2DL_Loop1
;__Lib_System.c,31 :: 		
L_end___CC2DW:
0x0086	0x0012      	RETURN      0
; end of ___CC2DW
_main:
0x0088	0x6A15      	CLRF        _myCounter 
;unit_01_04_pushAndIncrementCounter.c,74 :: 		void main() {
;unit_01_04_pushAndIncrementCounter.c,75 :: 		unsigned char flag = 0;              // Auxiliary flag to button's seal-in;
0x008A	0x6A16      	CLRF        main_flag_L0 
;unit_01_04_pushAndIncrementCounter.c,83 :: 		ADCON1 |= 0X0F;               // Config all ADC's pins as digital on PIC18F4520
0x008C	0x0E0F      	MOVLW       15
0x008E	0x12C1      	IORWF       ADCON1, 1 
;unit_01_04_pushAndIncrementCounter.c,88 :: 		TRISB.RB0 = 1;                     // Config RB0 as Input (1=I:)
0x0090	0x8093      	BSF         TRISB, 0 
;unit_01_04_pushAndIncrementCounter.c,89 :: 		PORTB.RB0 = 1;                     // Optional, the MCU do it automatically ;)
0x0092	0x8081      	BSF         PORTB, 0 
;unit_01_04_pushAndIncrementCounter.c,92 :: 		TRISD = 0;                         // Config all PORTD's pins as Output (0=0:)
0x0094	0x6A95      	CLRF        TRISD 
;unit_01_04_pushAndIncrementCounter.c,93 :: 		PORTD = 0;                         // Config all PORTD's pins as LOW,
0x0096	0x6A83      	CLRF        PORTD 
;unit_01_04_pushAndIncrementCounter.c,101 :: 		while(1)
L_main11:
;unit_01_04_pushAndIncrementCounter.c,106 :: 		if(PORTB.RB0 == 0 && flag == 0 )
0x0098	0xB081      	BTFSC       PORTB, 0 
0x009A	0xD012      	BRA         L_main15
0x009C	0x5016      	MOVF        main_flag_L0, 0 
0x009E	0x0A00      	XORLW       0
0x00A0	0xE10F      	BNZ         L_main15
L__main22:
;unit_01_04_pushAndIncrementCounter.c,110 :: 		increment(++myCounter);
0x00A2	0x2A15      	INCF        _myCounter, 1 
0x00A4	0xF017C015  	MOVFF       _myCounter, FARG_increment_counter
0x00A8	0xDFB9      	RCALL       _increment
;unit_01_04_pushAndIncrementCounter.c,111 :: 		flag = 1;                // force breaking this loop when the user are still pressing the button (the MC works in nonoseconds;)
0x00AA	0x0E01      	MOVLW       1
0x00AC	0x6E16      	MOVWF       main_flag_L0 
;unit_01_04_pushAndIncrementCounter.c,112 :: 		Delay_ms(40);            // treat debounce
0x00AE	0x0E68      	MOVLW       104
0x00B0	0x6E0C      	MOVWF       R12, 0
0x00B2	0x0EE4      	MOVLW       228
0x00B4	0x6E0D      	MOVWF       R13, 0
L_main16:
0x00B6	0x2E0D      	DECFSZ      R13, 1, 0
0x00B8	0xD7FE      	BRA         L_main16
0x00BA	0x2E0C      	DECFSZ      R12, 1, 0
0x00BC	0xD7FC      	BRA         L_main16
0x00BE	0x0000      	NOP
;unit_01_04_pushAndIncrementCounter.c,113 :: 		}
L_main15:
;unit_01_04_pushAndIncrementCounter.c,115 :: 		if(PORTB.RB0 == 1 && flag == 1 )
0x00C0	0xA081      	BTFSS       PORTB, 0 
0x00C2	0xD00D      	BRA         L_main19
0x00C4	0x5016      	MOVF        main_flag_L0, 0 
0x00C6	0x0A01      	XORLW       1
0x00C8	0xE10A      	BNZ         L_main19
L__main21:
;unit_01_04_pushAndIncrementCounter.c,117 :: 		flag = 0;                // Resetting the flag just when the user release the button; ready for the first loop; init cycle loop again:)
0x00CA	0x6A16      	CLRF        main_flag_L0 
;unit_01_04_pushAndIncrementCounter.c,118 :: 		Delay_ms(40);            // treat debounce
0x00CC	0x0E68      	MOVLW       104
0x00CE	0x6E0C      	MOVWF       R12, 0
0x00D0	0x0EE4      	MOVLW       228
0x00D2	0x6E0D      	MOVWF       R13, 0
L_main20:
0x00D4	0x2E0D      	DECFSZ      R13, 1, 0
0x00D6	0xD7FE      	BRA         L_main20
0x00D8	0x2E0C      	DECFSZ      R12, 1, 0
0x00DA	0xD7FC      	BRA         L_main20
0x00DC	0x0000      	NOP
;unit_01_04_pushAndIncrementCounter.c,119 :: 		}
L_main19:
;unit_01_04_pushAndIncrementCounter.c,121 :: 		}
0x00DE	0xD7DC      	BRA         L_main11
;unit_01_04_pushAndIncrementCounter.c,122 :: 		}
L_end_main:
0x00E0	0xD7FF      	BRA         $+0
; end of _main
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x001C      [92]    _increment
0x0078      [16]    ___CC2DW
0x0088      [90]    _main
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x0000       [1]    R0
0x0001       [1]    R1
0x0002       [1]    R2
0x0003       [1]    R3
0x0004       [1]    R4
0x0005       [1]    R5
0x0006       [1]    R6
0x0007       [1]    R7
0x0008       [1]    R8
0x0009       [1]    R9
0x000A       [1]    R10
0x000B       [1]    R11
0x000C       [1]    R12
0x000D       [1]    R13
0x000E       [1]    R14
0x000F       [1]    R15
0x0010       [1]    R16
0x0011       [1]    R17
0x0012       [1]    R18
0x0013       [1]    R19
0x0014       [1]    R20
0x0015       [1]    _myCounter
0x0016       [1]    main_flag_L0
0x0017       [1]    FARG_increment_counter
0x0F81       [1]    PORTB
0x0F83       [1]    PORTD
0x0F93       [1]    TRISB
0x0F95       [1]    TRISD
0x0FC1       [1]    ADCON1
0x0FD8       [1]    STATUS
0x0FD9       [1]    FSR2L
0x0FDA       [1]    FSR2H
0x0FDE       [1]    POSTINC2
0x0FE0       [1]    BSR
0x0FE1       [1]    FSR1L
0x0FE2       [1]    FSR1H
0x0FE4       [1]    PREINC1
0x0FE6       [1]    POSTINC1
0x0FE7       [1]    INDF1
0x0FE8       [1]    WREG
0x0FE9       [1]    FSR0L
0x0FEA       [1]    FSR0H
0x0FEE       [1]    POSTINC0
0x0FF3       [1]    PRODL
0x0FF4       [1]    PRODH
0x0FF5       [1]    TABLAT
0x0FF6       [1]    TBLPTRL
0x0FF7       [1]    TBLPTRH
0x0FF8       [1]    TBLPTRU
