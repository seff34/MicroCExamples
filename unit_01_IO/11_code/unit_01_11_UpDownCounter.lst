;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 27/10/2019 03:16:51 PM
;----------------------------------------------

;Address Opcode 	ASM
0x0000	0xF000EF17  	GOTO        46
0x0004	0x0000      	NOP
0x0006	0x0000      	NOP
0x0008	0xF000EF00  	GOTO        0
0x000C	0x0000      	NOP
0x000E	0x0000      	NOP
0x0010	0x0000      	NOP
0x0012	0x0000      	NOP
0x0014	0x0000      	NOP
0x0016	0x0000      	NOP
0x0018	0xD7F3      	BRA         0
_configMCU:
;unit_01_11_UpDownCounter.c,30 :: 		void configMCU()
;unit_01_11_UpDownCounter.c,35 :: 		ADCON1 |= 0X0F;               // Config all ADC's pins as digital on PIC18F4520
0x001C	0x0E0F      	MOVLW       15
0x001E	0x12C1      	IORWF       ADCON1, 1 
;unit_01_11_UpDownCounter.c,38 :: 		TRISB.RB0 = 1;                   // Config PORTB.RB0 as input (UP key)
0x0020	0x8093      	BSF         TRISB, 0 
;unit_01_11_UpDownCounter.c,39 :: 		PORTB.RB0 = 1;                   // Optional, the MCU do it automatically ;)
0x0022	0x8081      	BSF         PORTB, 0 
;unit_01_11_UpDownCounter.c,41 :: 		TRISB.RB1 = 1;                   // Config PORTB.RB1 as input (DOWN key)
0x0024	0x8293      	BSF         TRISB, 1 
;unit_01_11_UpDownCounter.c,42 :: 		PORTB.RB1 = 1;                   // Optional, the MCU do it automatically ;)
0x0026	0x8281      	BSF         PORTB, 1 
;unit_01_11_UpDownCounter.c,44 :: 		TRISD = 0;                       // Config PORTD as output
0x0028	0x6A95      	CLRF        TRISD 
;unit_01_11_UpDownCounter.c,45 :: 		PORTD = 0;                       // Turn off all the LEDs on PORTD
0x002A	0x6A83      	CLRF        PORTD 
;unit_01_11_UpDownCounter.c,46 :: 		}
L_end_configMCU:
0x002C	0x0012      	RETURN      0
; end of _configMCU
_main:
;unit_01_11_UpDownCounter.c,47 :: 		void main()
;unit_01_11_UpDownCounter.c,49 :: 		unsigned char flag1 = 0;        // auxiliary flag to manipulate key's pulses
0x002E	0x6A15      	CLRF        main_flag1_L0 
0x0030	0x6A16      	CLRF        main_flag2_L0 
;unit_01_11_UpDownCounter.c,52 :: 		configMCU();                    // Config all the MCU
0x0032	0xDFF4      	RCALL       _configMCU
;unit_01_11_UpDownCounter.c,54 :: 		while(TRUE)                      // Endless loop
L_main0:
;unit_01_11_UpDownCounter.c,56 :: 		if(BTN_UP == 0 && flag1 == 0 && LEDS < 255)
0x0034	0xB081      	BTFSC       PORTB, 0 
0x0036	0xD014      	BRA         L_main4
0x0038	0x5015      	MOVF        main_flag1_L0, 0 
0x003A	0x0A00      	XORLW       0
0x003C	0xE111      	BNZ         L_main4
0x003E	0x0EFF      	MOVLW       255
0x0040	0x5C83      	SUBWF       PORTD, 0 
0x0042	0xE20E      	BC          L_main4
L__main21:
;unit_01_11_UpDownCounter.c,58 :: 		if (LEDS == 0) {LEDS = 0b00000001;}
0x0044	0x5083      	MOVF        PORTD, 0 
0x0046	0x0A00      	XORLW       0
0x0048	0xE103      	BNZ         L_main5
0x004A	0x0E01      	MOVLW       1
0x004C	0x6E83      	MOVWF       PORTD 
0x004E	0xD006      	BRA         L_main6
L_main5:
;unit_01_11_UpDownCounter.c,60 :: 		LEDS = (LEDS << 1)| LEDS;
0x0050	0xF000CF83  	MOVFF       PORTD, R0
0x0054	0x3600      	RLCF        R0, 1 
0x0056	0x9000      	BCF         R0, 0 
0x0058	0x5000      	MOVF        R0, 0 
0x005A	0x1283      	IORWF       PORTD, 1 
L_main6:
;unit_01_11_UpDownCounter.c,61 :: 		flag1 = 1;
0x005C	0x0E01      	MOVLW       1
0x005E	0x6E15      	MOVWF       main_flag1_L0 
;unit_01_11_UpDownCounter.c,62 :: 		}
L_main4:
;unit_01_11_UpDownCounter.c,63 :: 		if(BTN_UP == 1 && flag1 == 1)
0x0060	0xA081      	BTFSS       PORTB, 0 
0x0062	0xD00E      	BRA         L_main9
0x0064	0x5015      	MOVF        main_flag1_L0, 0 
0x0066	0x0A01      	XORLW       1
0x0068	0xE10B      	BNZ         L_main9
L__main20:
;unit_01_11_UpDownCounter.c,65 :: 		Delay_ms(20);
0x006A	0x0E34      	MOVLW       52
0x006C	0x6E0C      	MOVWF       R12, 0
0x006E	0x0EF1      	MOVLW       241
0x0070	0x6E0D      	MOVWF       R13, 0
L_main10:
0x0072	0x2E0D      	DECFSZ      R13, 1, 0
0x0074	0xD7FE      	BRA         L_main10
0x0076	0x2E0C      	DECFSZ      R12, 1, 0
0x0078	0xD7FC      	BRA         L_main10
0x007A	0x0000      	NOP
0x007C	0x0000      	NOP
;unit_01_11_UpDownCounter.c,66 :: 		flag1 = 0;
0x007E	0x6A15      	CLRF        main_flag1_L0 
;unit_01_11_UpDownCounter.c,67 :: 		}
L_main9:
;unit_01_11_UpDownCounter.c,68 :: 		if(BTN_DOWN == 0 && flag2 == 0 && LEDS > 0)
0x0080	0xB281      	BTFSC       PORTB, 1 
0x0082	0xD00E      	BRA         L_main13
0x0084	0x5016      	MOVF        main_flag2_L0, 0 
0x0086	0x0A00      	XORLW       0
0x0088	0xE10B      	BNZ         L_main13
0x008A	0x5083      	MOVF        PORTD, 0 
0x008C	0x0800      	SUBLW       0
0x008E	0xE208      	BC          L_main13
L__main19:
;unit_01_11_UpDownCounter.c,70 :: 		LEDS = (LEDS/2);
0x0090	0xF000CF83  	MOVFF       PORTD, R0
0x0094	0x3200      	RRCF        R0, 1 
0x0096	0x9E00      	BCF         R0, 7 
0x0098	0xFF83C000  	MOVFF       R0, PORTD
;unit_01_11_UpDownCounter.c,71 :: 		flag2 = 1;
0x009C	0x0E01      	MOVLW       1
0x009E	0x6E16      	MOVWF       main_flag2_L0 
;unit_01_11_UpDownCounter.c,72 :: 		}
L_main13:
;unit_01_11_UpDownCounter.c,73 :: 		if(BTN_DOWN == 1 && flag2 == 1)
0x00A0	0xA281      	BTFSS       PORTB, 1 
0x00A2	0xD00E      	BRA         L_main16
0x00A4	0x5016      	MOVF        main_flag2_L0, 0 
0x00A6	0x0A01      	XORLW       1
0x00A8	0xE10B      	BNZ         L_main16
L__main18:
;unit_01_11_UpDownCounter.c,75 :: 		Delay_ms(20);
0x00AA	0x0E34      	MOVLW       52
0x00AC	0x6E0C      	MOVWF       R12, 0
0x00AE	0x0EF1      	MOVLW       241
0x00B0	0x6E0D      	MOVWF       R13, 0
L_main17:
0x00B2	0x2E0D      	DECFSZ      R13, 1, 0
0x00B4	0xD7FE      	BRA         L_main17
0x00B6	0x2E0C      	DECFSZ      R12, 1, 0
0x00B8	0xD7FC      	BRA         L_main17
0x00BA	0x0000      	NOP
0x00BC	0x0000      	NOP
;unit_01_11_UpDownCounter.c,76 :: 		flag2 = 0;
0x00BE	0x6A16      	CLRF        main_flag2_L0 
;unit_01_11_UpDownCounter.c,77 :: 		}
L_main16:
;unit_01_11_UpDownCounter.c,78 :: 		}
0x00C0	0xD7B9      	BRA         L_main0
;unit_01_11_UpDownCounter.c,79 :: 		}
L_end_main:
0x00C2	0xD7FF      	BRA         $+0
; end of _main
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x001C      [18]    _configMCU
0x002E     [150]    _main
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x0000       [1]    R0
0x0001       [1]    R1
0x0002       [1]    R2
0x0003       [1]    R3
0x0004       [1]    R4
0x0005       [1]    R5
0x0006       [1]    R6
0x0007       [1]    R7
0x0008       [1]    R8
0x0009       [1]    R9
0x000A       [1]    R10
0x000B       [1]    R11
0x000C       [1]    R12
0x000D       [1]    R13
0x000E       [1]    R14
0x000F       [1]    R15
0x0010       [1]    R16
0x0011       [1]    R17
0x0012       [1]    R18
0x0013       [1]    R19
0x0014       [1]    R20
0x0015       [1]    main_flag1_L0
0x0016       [1]    main_flag2_L0
0x0F81       [1]    PORTB
0x0F83       [1]    PORTD
0x0F93       [1]    TRISB
0x0F95       [1]    TRISD
0x0FC1       [1]    ADCON1
0x0FD8       [1]    STATUS
0x0FD9       [1]    FSR2L
0x0FDA       [1]    FSR2H
0x0FDE       [1]    POSTINC2
0x0FE0       [1]    BSR
0x0FE1       [1]    FSR1L
0x0FE2       [1]    FSR1H
0x0FE4       [1]    PREINC1
0x0FE6       [1]    POSTINC1
0x0FE7       [1]    INDF1
0x0FE8       [1]    WREG
0x0FE9       [1]    FSR0L
0x0FEA       [1]    FSR0H
0x0FEE       [1]    POSTINC0
0x0FF3       [1]    PRODL
0x0FF4       [1]    PRODH
0x0FF5       [1]    TABLAT
0x0FF6       [1]    TBLPTRL
0x0FF7       [1]    TBLPTRH
0x0FF8       [1]    TBLPTRU
