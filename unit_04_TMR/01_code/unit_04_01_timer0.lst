;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 31/10/2019 08:34:44 PM
;----------------------------------------------

;Address Opcode 	ASM
0x0000	0xF000EF1C  	GOTO        56
0x0004	0x0000      	NOP
0x0006	0x0000      	NOP
0x0008	0xF000EF00  	GOTO        0
0x000C	0x0000      	NOP
0x000E	0x0000      	NOP
0x0010	0x0000      	NOP
0x0012	0x0000      	NOP
0x0014	0x0000      	NOP
0x0016	0x0000      	NOP
0x0018	0xD7F3      	BRA         0
_ConfigTimer:
;unit_04_01_timer0.c,89 :: 		void ConfigTimer()
;unit_04_01_timer0.c,91 :: 		T0CON = 0B00000110;                 // prescale 1:128, mode 16-bit
0x001C	0x0E06      	MOVLW       6
0x001E	0x6ED5      	MOVWF       T0CON 
;unit_04_01_timer0.c,92 :: 		TMR0L = 0XF7;
0x0020	0x0EF7      	MOVLW       247
0x0022	0x6ED6      	MOVWF       TMR0L 
;unit_04_01_timer0.c,93 :: 		TMR0H = 0XC7;                       // Recharge initial counter &
0x0024	0x0EC7      	MOVLW       199
0x0026	0x6ED7      	MOVWF       TMR0H 
;unit_04_01_timer0.c,94 :: 		INTCON.TMR0IF = 0;                  // clean overflow Timer0's flag
0x0028	0x94F2      	BCF         INTCON, 2 
;unit_04_01_timer0.c,96 :: 		T0CON.TMR0ON = 1;                   // Timer0 on
0x002A	0x8ED5      	BSF         T0CON, 7 
;unit_04_01_timer0.c,97 :: 		}
L_end_ConfigTimer:
0x002C	0x0012      	RETURN      0
; end of _ConfigTimer
_ConfigMCU:
;unit_04_01_timer0.c,77 :: 		void ConfigMCU()
;unit_04_01_timer0.c,82 :: 		ADCON1 |= 0X0F;
0x002E	0x0E0F      	MOVLW       15
0x0030	0x12C1      	IORWF       ADCON1, 1 
;unit_04_01_timer0.c,85 :: 		TRISD = 0;                               // LED as output
0x0032	0x6A95      	CLRF        TRISD 
;unit_04_01_timer0.c,86 :: 		PORTD = 0;                               // LED off
0x0034	0x6A83      	CLRF        PORTD 
;unit_04_01_timer0.c,87 :: 		}
L_end_ConfigMCU:
0x0036	0x0012      	RETURN      0
; end of _ConfigMCU
_main:
;unit_04_01_timer0.c,100 :: 		void main() {
;unit_04_01_timer0.c,101 :: 		ConfigMCU();
0x0038	0xDFFA      	RCALL       _ConfigMCU
;unit_04_01_timer0.c,102 :: 		ConfigTimer();
0x003A	0xDFF0      	RCALL       _ConfigTimer
;unit_04_01_timer0.c,104 :: 		while (TRUE)
L_main0:
;unit_04_01_timer0.c,106 :: 		if(INTCON.TMR0IF == 1)
0x003C	0xA4F2      	BTFSS       INTCON, 2 
0x003E	0xD00A      	BRA         L_main2
;unit_04_01_timer0.c,108 :: 		PORTD.RD0 = ~LATD.RD0;              // toggle LED's logic signal
0x0040	0xB08C      	BTFSC       LATD, 0 
0x0042	0xD002      	BRA         L__main6
0x0044	0x8083      	BSF         PORTD, 0 
0x0046	0xD001      	BRA         L__main7
L__main6:
0x0048	0x9083      	BCF         PORTD, 0 
L__main7:
;unit_04_01_timer0.c,110 :: 		TMR0L = 0XF7;
0x004A	0x0EF7      	MOVLW       247
0x004C	0x6ED6      	MOVWF       TMR0L 
;unit_04_01_timer0.c,111 :: 		TMR0H = 0XC7;                       // initial recharged default values
0x004E	0x0EC7      	MOVLW       199
0x0050	0x6ED7      	MOVWF       TMR0H 
;unit_04_01_timer0.c,112 :: 		INTCON.TMR0IF = 0;                  // Flag Timer0's overflow signal
0x0052	0x94F2      	BCF         INTCON, 2 
;unit_04_01_timer0.c,113 :: 		}
L_main2:
;unit_04_01_timer0.c,115 :: 		}
0x0054	0xD7F3      	BRA         L_main0
;unit_04_01_timer0.c,120 :: 		}
L_end_main:
0x0056	0xD7FF      	BRA         $+0
; end of _main
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x001C      [18]    _ConfigTimer
0x002E      [10]    _ConfigMCU
0x0038      [32]    _main
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x0000       [1]    R0
0x0001       [1]    R1
0x0002       [1]    R2
0x0003       [1]    R3
0x0004       [1]    R4
0x0005       [1]    R5
0x0006       [1]    R6
0x0007       [1]    R7
0x0008       [1]    R8
0x0009       [1]    R9
0x000A       [1]    R10
0x000B       [1]    R11
0x000C       [1]    R12
0x000D       [1]    R13
0x000E       [1]    R14
0x000F       [1]    R15
0x0010       [1]    R16
0x0011       [1]    R17
0x0012       [1]    R18
0x0013       [1]    R19
0x0014       [1]    R20
0x0F83       [1]    PORTD
0x0F8C       [1]    LATD
0x0F95       [1]    TRISD
0x0FC1       [1]    ADCON1
0x0FD5       [1]    T0CON
0x0FD6       [1]    TMR0L
0x0FD7       [1]    TMR0H
0x0FD8       [1]    STATUS
0x0FD9       [1]    FSR2L
0x0FDA       [1]    FSR2H
0x0FDE       [1]    POSTINC2
0x0FE0       [1]    BSR
0x0FE1       [1]    FSR1L
0x0FE2       [1]    FSR1H
0x0FE4       [1]    PREINC1
0x0FE6       [1]    POSTINC1
0x0FE7       [1]    INDF1
0x0FE8       [1]    WREG
0x0FE9       [1]    FSR0L
0x0FEA       [1]    FSR0H
0x0FEE       [1]    POSTINC0
0x0FF2       [1]    INTCON
0x0FF3       [1]    PRODL
0x0FF4       [1]    PRODH
0x0FF5       [1]    TABLAT
0x0FF6       [1]    TBLPTRL
0x0FF7       [1]    TBLPTRH
0x0FF8       [1]    TBLPTRU
