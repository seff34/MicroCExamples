;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 30/11/2019 11:43:51 AM
;----------------------------------------------

;Address Opcode 	ASM
0x0000	0xF000EF1A  	GOTO        52
0x0004	0x0000      	NOP
0x0006	0x0000      	NOP
0x0008	0xF000EF00  	GOTO        0
0x000C	0x0000      	NOP
0x000E	0x0000      	NOP
0x0010	0x0000      	NOP
0x0012	0x0000      	NOP
0x0014	0x0000      	NOP
0x0016	0x0000      	NOP
0x0018	0xD7F3      	BRA         0
_ConfigTimer:
;unit04_04_timer1.c,81 :: 		void ConfigTimer()
;unit04_04_timer1.c,86 :: 		T1CON = 0B10110000;                // Timer1 off, Prescale 1:8, Mode 16-BITS
0x001C	0x0EB0      	MOVLW       176
0x001E	0x6ECD      	MOVWF       T1CON 
;unit04_04_timer1.c,88 :: 		TMR1H = 0;                          // Initial values for accumulator registers
0x0020	0x6ACF      	CLRF        TMR1H 
;unit04_04_timer1.c,89 :: 		TMR1L = 0;
0x0022	0x6ACE      	CLRF        TMR1L 
;unit04_04_timer1.c,91 :: 		PIR1.TMR1IF = 0;                    // Flag cleared
0x0024	0x909E      	BCF         PIR1, 0 
;unit04_04_timer1.c,92 :: 		T1CON.TMR1ON = 1;                   // Timer1 on, everything is configured, right?
0x0026	0x80CD      	BSF         T1CON, 0 
;unit04_04_timer1.c,93 :: 		}
L_end_ConfigTimer:
0x0028	0x0012      	RETURN      0
; end of _ConfigTimer
_ConfigMCU:
;unit04_04_timer1.c,70 :: 		void ConfigMCU()
;unit04_04_timer1.c,75 :: 		ADCON1 |= 0X0F;                    // (PIC18F45220) Determine if anal/digital pins
0x002A	0x0E0F      	MOVLW       15
0x002C	0x12C1      	IORWF       ADCON1, 1 
;unit04_04_timer1.c,77 :: 		TRISB = 0;                         // LED is attached to PORTD.RD0
0x002E	0x6A93      	CLRF        TRISB 
;unit04_04_timer1.c,78 :: 		PORTB = 0;
0x0030	0x6A81      	CLRF        PORTB 
;unit04_04_timer1.c,79 :: 		}
L_end_ConfigMCU:
0x0032	0x0012      	RETURN      0
; end of _ConfigMCU
_main:
;unit04_04_timer1.c,95 :: 		void main() {
;unit04_04_timer1.c,96 :: 		ConfigMCU();
0x0034	0xDFFA      	RCALL       _ConfigMCU
;unit04_04_timer1.c,97 :: 		ConfigTimer();
0x0036	0xDFF2      	RCALL       _ConfigTimer
;unit04_04_timer1.c,99 :: 		while (TRUE)                         // Do forever
L_main0:
;unit04_04_timer1.c,101 :: 		if(PIR1.TMR1IF == 1)
0x0038	0xA09E      	BTFSS       PIR1, 0 
0x003A	0xD008      	BRA         L_main2
;unit04_04_timer1.c,103 :: 		PORTB.RB0 = ~LATB.RB0;          // toggle LED
0x003C	0xB08A      	BTFSC       LATB, 0 
0x003E	0xD002      	BRA         L__main6
0x0040	0x8081      	BSF         PORTB, 0 
0x0042	0xD001      	BRA         L__main7
L__main6:
0x0044	0x9081      	BCF         PORTB, 0 
L__main7:
;unit04_04_timer1.c,105 :: 		TMR1H = 0;                      // Recharge default values
0x0046	0x6ACF      	CLRF        TMR1H 
;unit04_04_timer1.c,106 :: 		TMR1L = 0;
0x0048	0x6ACE      	CLRF        TMR1L 
;unit04_04_timer1.c,107 :: 		PIR1.TMR1IF = 0;                // Clear Timer1's overflow Flag
0x004A	0x909E      	BCF         PIR1, 0 
;unit04_04_timer1.c,108 :: 		}
L_main2:
;unit04_04_timer1.c,109 :: 		}
0x004C	0xD7F5      	BRA         L_main0
;unit04_04_timer1.c,110 :: 		}
L_end_main:
0x004E	0xD7FF      	BRA         $+0
; end of _main
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x001C      [14]    _ConfigTimer
0x002A      [10]    _ConfigMCU
0x0034      [28]    _main
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x0000       [1]    R0
0x0001       [1]    R1
0x0002       [1]    R2
0x0003       [1]    R3
0x0004       [1]    R4
0x0005       [1]    R5
0x0006       [1]    R6
0x0007       [1]    R7
0x0008       [1]    R8
0x0009       [1]    R9
0x000A       [1]    R10
0x000B       [1]    R11
0x000C       [1]    R12
0x000D       [1]    R13
0x000E       [1]    R14
0x000F       [1]    R15
0x0010       [1]    R16
0x0011       [1]    R17
0x0012       [1]    R18
0x0013       [1]    R19
0x0014       [1]    R20
0x0F81       [1]    PORTB
0x0F8A       [1]    LATB
0x0F93       [1]    TRISB
0x0F9E       [1]    PIR1
0x0FC1       [1]    ADCON1
0x0FCD       [1]    T1CON
0x0FCE       [1]    TMR1L
0x0FCF       [1]    TMR1H
0x0FD8       [1]    STATUS
0x0FD9       [1]    FSR2L
0x0FDA       [1]    FSR2H
0x0FDE       [1]    POSTINC2
0x0FE0       [1]    BSR
0x0FE1       [1]    FSR1L
0x0FE2       [1]    FSR1H
0x0FE4       [1]    PREINC1
0x0FE6       [1]    POSTINC1
0x0FE7       [1]    INDF1
0x0FE8       [1]    WREG
0x0FE9       [1]    FSR0L
0x0FEA       [1]    FSR0H
0x0FEE       [1]    POSTINC0
0x0FF3       [1]    PRODL
0x0FF4       [1]    PRODH
0x0FF5       [1]    TABLAT
0x0FF6       [1]    TBLPTRL
0x0FF7       [1]    TBLPTRH
0x0FF8       [1]    TBLPTRU
