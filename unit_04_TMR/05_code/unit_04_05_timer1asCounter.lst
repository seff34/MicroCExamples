;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 31/10/2019 12:20:32 PM
;----------------------------------------------

;Address Opcode 	ASM
0x0000	0xF000EF1E  	GOTO        60
0x0004	0x0000      	NOP
0x0006	0x0000      	NOP
0x0008	0xF000EF00  	GOTO        0
0x000C	0x0000      	NOP
0x000E	0x0000      	NOP
0x0010	0x0000      	NOP
0x0012	0x0000      	NOP
0x0014	0x0000      	NOP
0x0016	0x0000      	NOP
0x0018	0xD7F3      	BRA         0
_ConfigTimer:
;unit_04_05_timer1asCounter.c,84 :: 		void ConfigTimer()
;unit_04_05_timer1asCounter.c,89 :: 		T1CON = 0B10000010;                // Timer1 off, Prescale 1:1 , Mode 16-BITS, edge low/high
0x001C	0x0E82      	MOVLW       130
0x001E	0x6ECD      	MOVWF       T1CON 
;unit_04_05_timer1asCounter.c,91 :: 		TMR1H = 0XFF;                       // Initial values for accumulator registers
0x0020	0x0EFF      	MOVLW       255
0x0022	0x6ECF      	MOVWF       TMR1H 
;unit_04_05_timer1asCounter.c,92 :: 		TMR1L = 0XFF;                       // One more pulse, Timer1 overflow!
0x0024	0x0EFF      	MOVLW       255
0x0026	0x6ECE      	MOVWF       TMR1L 
;unit_04_05_timer1asCounter.c,94 :: 		PIR1.TMR1IF = 0;                    // Flag clearhigh/low
0x0028	0x909E      	BCF         PIR1, 0 
;unit_04_05_timer1asCounter.c,95 :: 		T1CON.TMR1ON = 1;                   // Timer1 on, everything is configurhigh/low, rightD
0x002A	0x80CD      	BSF         T1CON, 0 
;unit_04_05_timer1asCounter.c,96 :: 		}
L_end_ConfigTimer:
0x002C	0x0012      	RETURN      0
; end of _ConfigTimer
_ConfigMCU:
;unit_04_05_timer1asCounter.c,70 :: 		void ConfigMCU()
;unit_04_05_timer1asCounter.c,76 :: 		ADCON1 |= 0X0F;                    // (PIC18F45220) Determine if anal/digital pins
0x002E	0x0E0F      	MOVLW       15
0x0030	0x12C1      	IORWF       ADCON1, 1 
;unit_04_05_timer1asCounter.c,78 :: 		TRISD = 0;                         // LED is attached to PORTD.R0
0x0032	0x6A95      	CLRF        TRISD 
;unit_04_05_timer1asCounter.c,79 :: 		PORTD = 0;
0x0034	0x6A83      	CLRF        PORTD 
;unit_04_05_timer1asCounter.c,80 :: 		TRISC.RC0 = 1;                     // Simulate pulses PORTC.RC0 (T13CKI pin)
0x0036	0x8094      	BSF         TRISC, 0 
;unit_04_05_timer1asCounter.c,81 :: 		PORTC.RC0 = 1;
0x0038	0x8082      	BSF         PORTC, 0 
;unit_04_05_timer1asCounter.c,82 :: 		}
L_end_ConfigMCU:
0x003A	0x0012      	RETURN      0
; end of _ConfigMCU
_main:
;unit_04_05_timer1asCounter.c,98 :: 		void main() {
;unit_04_05_timer1asCounter.c,99 :: 		ConfigMCU();
0x003C	0xDFF8      	RCALL       _ConfigMCU
;unit_04_05_timer1asCounter.c,100 :: 		ConfigTimer();
0x003E	0xDFEE      	RCALL       _ConfigTimer
;unit_04_05_timer1asCounter.c,102 :: 		while (TRUE)                         // Do forever
L_main0:
;unit_04_05_timer1asCounter.c,104 :: 		if(PIR1.TMR1IF == 1)
0x0040	0xA09E      	BTFSS       PIR1, 0 
0x0042	0xD00A      	BRA         L_main2
;unit_04_05_timer1asCounter.c,106 :: 		PORTD.RD0 = ~LATD.RD0;          // toggle LED high/low
0x0044	0xB08C      	BTFSC       LATD, 0 
0x0046	0xD002      	BRA         L__main6
0x0048	0x8083      	BSF         PORTD, 0 
0x004A	0xD001      	BRA         L__main7
L__main6:
0x004C	0x9083      	BCF         PORTD, 0 
L__main7:
;unit_04_05_timer1asCounter.c,108 :: 		TMR1H = 0XFF;                   // Recharge default values
0x004E	0x0EFF      	MOVLW       255
0x0050	0x6ECF      	MOVWF       TMR1H 
;unit_04_05_timer1asCounter.c,109 :: 		TMR1L = 0XFF;
0x0052	0x0EFF      	MOVLW       255
0x0054	0x6ECE      	MOVWF       TMR1L 
;unit_04_05_timer1asCounter.c,110 :: 		PIR1.TMR1IF = 0;                // Clear Timer1's overflow Flag
0x0056	0x909E      	BCF         PIR1, 0 
;unit_04_05_timer1asCounter.c,111 :: 		}
L_main2:
;unit_04_05_timer1asCounter.c,112 :: 		}
0x0058	0xD7F3      	BRA         L_main0
;unit_04_05_timer1asCounter.c,113 :: 		}
L_end_main:
0x005A	0xD7FF      	BRA         $+0
; end of _main
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x001C      [18]    _ConfigTimer
0x002E      [14]    _ConfigMCU
0x003C      [32]    _main
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x0000       [1]    R0
0x0001       [1]    R1
0x0002       [1]    R2
0x0003       [1]    R3
0x0004       [1]    R4
0x0005       [1]    R5
0x0006       [1]    R6
0x0007       [1]    R7
0x0008       [1]    R8
0x0009       [1]    R9
0x000A       [1]    R10
0x000B       [1]    R11
0x000C       [1]    R12
0x000D       [1]    R13
0x000E       [1]    R14
0x000F       [1]    R15
0x0010       [1]    R16
0x0011       [1]    R17
0x0012       [1]    R18
0x0013       [1]    R19
0x0014       [1]    R20
0x0F82       [1]    PORTC
0x0F83       [1]    PORTD
0x0F8C       [1]    LATD
0x0F94       [1]    TRISC
0x0F95       [1]    TRISD
0x0F9E       [1]    PIR1
0x0FC1       [1]    ADCON1
0x0FCD       [1]    T1CON
0x0FCE       [1]    TMR1L
0x0FCF       [1]    TMR1H
0x0FD8       [1]    STATUS
0x0FD9       [1]    FSR2L
0x0FDA       [1]    FSR2H
0x0FDE       [1]    POSTINC2
0x0FE0       [1]    BSR
0x0FE1       [1]    FSR1L
0x0FE2       [1]    FSR1H
0x0FE4       [1]    PREINC1
0x0FE6       [1]    POSTINC1
0x0FE7       [1]    INDF1
0x0FE8       [1]    WREG
0x0FE9       [1]    FSR0L
0x0FEA       [1]    FSR0H
0x0FEE       [1]    POSTINC0
0x0FF3       [1]    PRODL
0x0FF4       [1]    PRODH
0x0FF5       [1]    TABLAT
0x0FF6       [1]    TBLPTRL
0x0FF7       [1]    TBLPTRH
0x0FF8       [1]    TBLPTRU
