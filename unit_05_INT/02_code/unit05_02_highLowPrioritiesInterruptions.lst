;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 30/11/2019 02:33:34 PM
;----------------------------------------------

;Address Opcode 	ASM
0x0000	0xF000EF5B  	GOTO        182
0x0004	0x0000      	NOP
0x0006	0x0000      	NOP
0x0008	0xF000EF31  	GOTO        98
0x000C	0x0000      	NOP
0x000E	0x0000      	NOP
0x0010	0x0000      	NOP
0x0012	0x0000      	NOP
0x0014	0x0000      	NOP
0x0016	0x0000      	NOP
0x0018	0xF000EF3E  	GOTO        124
_configGlobalInterruption:
;unit05_02_highLowPrioritiesInterruptions.c,209 :: 		void configGlobalInterruption()     // Interruptions's master keys
;unit05_02_highLowPrioritiesInterruptions.c,211 :: 		INTCON.GIEH = 1;                  // High priority enabled
0x001C	0x8EF2      	BSF         INTCON, 7 
;unit05_02_highLowPrioritiesInterruptions.c,212 :: 		INTCON.GIEL = 1;                  // Low prioritY enabled
0x001E	0x8CF2      	BSF         INTCON, 6 
;unit05_02_highLowPrioritiesInterruptions.c,213 :: 		RCON.IPEN =   1;                  // Compatibility family 16F (just one level)
0x0020	0x8ED0      	BSF         RCON, 7 
;unit05_02_highLowPrioritiesInterruptions.c,216 :: 		}
L_end_configGlobalInterruption:
0x0022	0x0012      	RETURN      0
; end of _configGlobalInterruption
_configIndividualVctTMR0:
;unit05_02_highLowPrioritiesInterruptions.c,217 :: 		void configIndividualVctTMR0()
;unit05_02_highLowPrioritiesInterruptions.c,220 :: 		INTCON.TMR0IF  = 0;               // Overflow flag; please init zero
0x0024	0x94F2      	BCF         INTCON, 2 
;unit05_02_highLowPrioritiesInterruptions.c,221 :: 		INTCON2.TMR0IP = 1;               // Interruption priority vector: HIGH
0x0026	0x84F1      	BSF         INTCON2, 2 
;unit05_02_highLowPrioritiesInterruptions.c,222 :: 		INTCON.TMR0IE  = 1;               // TIMER0's interruption enabled
0x0028	0x8AF2      	BSF         INTCON, 5 
;unit05_02_highLowPrioritiesInterruptions.c,223 :: 		}
L_end_configIndividualVctTMR0:
0x002A	0x0012      	RETURN      0
; end of _configIndividualVctTMR0
_configIndividualVctTMR1:
;unit05_02_highLowPrioritiesInterruptions.c,224 :: 		void configIndividualVctTMR1()
;unit05_02_highLowPrioritiesInterruptions.c,227 :: 		PIR1.TMR1IF  = 0;                 // Overflow flag; please init zero
0x002C	0x909E      	BCF         PIR1, 0 
;unit05_02_highLowPrioritiesInterruptions.c,228 :: 		IPR1.TMR1IP = 0;                  // Interruption priority vector: LOW
0x002E	0x909F      	BCF         IPR1, 0 
;unit05_02_highLowPrioritiesInterruptions.c,229 :: 		PIE1.TMR1IE  = 1;                 // TIMER0's interruption enabled
0x0030	0x809D      	BSF         PIE1, 0 
;unit05_02_highLowPrioritiesInterruptions.c,230 :: 		}
L_end_configIndividualVctTMR1:
0x0032	0x0012      	RETURN      0
; end of _configIndividualVctTMR1
_configTMR1:
;unit05_02_highLowPrioritiesInterruptions.c,196 :: 		void configTMR1()                   // TIMER1 em 1000ms
;unit05_02_highLowPrioritiesInterruptions.c,201 :: 		T1CON = 0B10110000;                // Timer1 OFF, Mod 16-bits, Mode Timer, Prescale 1:8
0x0034	0x0EB0      	MOVLW       176
0x0036	0x6ECD      	MOVWF       T1CON 
;unit05_02_highLowPrioritiesInterruptions.c,203 :: 		TMR1H = 0X0B;
0x0038	0x0E0B      	MOVLW       11
0x003A	0x6ECF      	MOVWF       TMR1H 
;unit05_02_highLowPrioritiesInterruptions.c,204 :: 		TMR1L = 0XDC;
0x003C	0x0EDC      	MOVLW       220
0x003E	0x6ECE      	MOVWF       TMR1L 
;unit05_02_highLowPrioritiesInterruptions.c,206 :: 		PIR1.TMR1IF = 0;                  // Clear Flag
0x0040	0x909E      	BCF         PIR1, 0 
;unit05_02_highLowPrioritiesInterruptions.c,207 :: 		T1CON.TMR1ON = 1;                 // Timer1 on!
0x0042	0x80CD      	BSF         T1CON, 0 
;unit05_02_highLowPrioritiesInterruptions.c,208 :: 		}
L_end_configTMR1:
0x0044	0x0012      	RETURN      0
; end of _configTMR1
_configMCU:
;unit05_02_highLowPrioritiesInterruptions.c,172 :: 		void configMCU()                  // Timer0 Port & Directions
;unit05_02_highLowPrioritiesInterruptions.c,177 :: 		ADCON1 |= 0X0F;                    // Analog pinouts
0x0046	0x0E0F      	MOVLW       15
0x0048	0x12C1      	IORWF       ADCON1, 1 
;unit05_02_highLowPrioritiesInterruptions.c,180 :: 		TRISD = 0;
0x004A	0x6A95      	CLRF        TRISD 
;unit05_02_highLowPrioritiesInterruptions.c,181 :: 		PORTD = 0;                        // LEDs' control pins
0x004C	0x6A83      	CLRF        PORTD 
;unit05_02_highLowPrioritiesInterruptions.c,182 :: 		}
L_end_configMCU:
0x004E	0x0012      	RETURN      0
; end of _configMCU
_configTMR0:
;unit05_02_highLowPrioritiesInterruptions.c,183 :: 		void configTMR0()                   // TIMER0 em 200ms
;unit05_02_highLowPrioritiesInterruptions.c,188 :: 		T0CON = 0B00000100;                // Timer OFF, Mod 16-bits, Mode Timer, Prescale 1:32
0x0050	0x0E04      	MOVLW       4
0x0052	0x6ED5      	MOVWF       T0CON 
;unit05_02_highLowPrioritiesInterruptions.c,190 :: 		TMR0H = 0XCF;
0x0054	0x0ECF      	MOVLW       207
0x0056	0x6ED7      	MOVWF       TMR0H 
;unit05_02_highLowPrioritiesInterruptions.c,191 :: 		TMR0L = 0X2C;
0x0058	0x0E2C      	MOVLW       44
0x005A	0x6ED6      	MOVWF       TMR0L 
;unit05_02_highLowPrioritiesInterruptions.c,193 :: 		INTCON.TMR0IF = 0;                // Clear Flag
0x005C	0x94F2      	BCF         INTCON, 2 
;unit05_02_highLowPrioritiesInterruptions.c,194 :: 		T0CON.TMR0ON = 1;                 // Timer0 on!
0x005E	0x8ED5      	BSF         T0CON, 7 
;unit05_02_highLowPrioritiesInterruptions.c,195 :: 		}
L_end_configTMR0:
0x0060	0x0012      	RETURN      0
; end of _configTMR0
_INTERRUPTION_HIGH:
;unit05_02_highLowPrioritiesInterruptions.c,135 :: 		void INTERRUPTION_HIGH() iv 0x0008 ics ICS_AUTO
;unit05_02_highLowPrioritiesInterruptions.c,138 :: 		if(INTCON.TMR0IF == 1)
0x0062	0xA4F2      	BTFSS       INTCON, 2 
0x0064	0xD00A      	BRA         L_INTERRUPTION_HIGH0
;unit05_02_highLowPrioritiesInterruptions.c,140 :: 		PORTD.RD0 = ~LATD.RD0;          // Toggle LED bit 0
0x0066	0xB08C      	BTFSC       LATD, 0 
0x0068	0xD002      	BRA         L__INTERRUPTION_HIGH8
0x006A	0x8083      	BSF         PORTD, 0 
0x006C	0xD001      	BRA         L__INTERRUPTION_HIGH9
L__INTERRUPTION_HIGH8:
0x006E	0x9083      	BCF         PORTD, 0 
L__INTERRUPTION_HIGH9:
;unit05_02_highLowPrioritiesInterruptions.c,143 :: 		TMR0H = 0XCF;                   // Recharge acumulator
0x0070	0x0ECF      	MOVLW       207
0x0072	0x6ED7      	MOVWF       TMR0H 
;unit05_02_highLowPrioritiesInterruptions.c,144 :: 		TMR0L = 0X2C;
0x0074	0x0E2C      	MOVLW       44
0x0076	0x6ED6      	MOVWF       TMR0L 
;unit05_02_highLowPrioritiesInterruptions.c,146 :: 		INTCON.TMR0IF = 0;              // Clear flag & reset interruption cycle
0x0078	0x94F2      	BCF         INTCON, 2 
;unit05_02_highLowPrioritiesInterruptions.c,148 :: 		}
L_INTERRUPTION_HIGH0:
;unit05_02_highLowPrioritiesInterruptions.c,149 :: 		}
L_end_INTERRUPTION_HIGH:
L__INTERRUPTION_HIGH7:
0x007A	0x0011      	RETFIE      1
; end of _INTERRUPTION_HIGH
_INTERRUPTION_LOW:
0x007C	0x6E15      	MOVWF       ___Low_saveWREG 
0x007E	0xF016CFD8  	MOVFF       STATUS, ___Low_saveSTATUS
0x0082	0xF017CFE0  	MOVFF       BSR, ___Low_saveBSR
;unit05_02_highLowPrioritiesInterruptions.c,151 :: 		void INTERRUPTION_LOW() iv 0x0018 ics ICS_AUTO {
;unit05_02_highLowPrioritiesInterruptions.c,154 :: 		if(PIR1.TMR1IF == 1)
0x0086	0xA09E      	BTFSS       PIR1, 0 
0x0088	0xD00F      	BRA         L_INTERRUPTION_LOW1
;unit05_02_highLowPrioritiesInterruptions.c,156 :: 		counter++;                     // By using counter you can make this
0x008A	0x5001      	MOVF        R1, 0 
0x008C	0x0F01      	ADDLW       1
0x008E	0x6E00      	MOVWF       R0 
0x0090	0xF001C000  	MOVFF       R0, R1
;unit05_02_highLowPrioritiesInterruptions.c,158 :: 		if(counter == 4)              // Overflow at 250ms x 4 = 1000ms
0x0094	0x5001      	MOVF        R1, 0 
0x0096	0x0A04      	XORLW       4
0x0098	0xE102      	BNZ         L_INTERRUPTION_LOW2
;unit05_02_highLowPrioritiesInterruptions.c,160 :: 		PORTD.RD4 ^= 1;           // Toggle LED bit 2
0x009A	0x7883      	BTG         PORTD, 4 
;unit05_02_highLowPrioritiesInterruptions.c,161 :: 		counter = 0;
0x009C	0x6A01      	CLRF        R1 
;unit05_02_highLowPrioritiesInterruptions.c,162 :: 		}
L_INTERRUPTION_LOW2:
;unit05_02_highLowPrioritiesInterruptions.c,164 :: 		TMR1H = 0X0B;                   // Recharge acumulator
0x009E	0x0E0B      	MOVLW       11
0x00A0	0x6ECF      	MOVWF       TMR1H 
;unit05_02_highLowPrioritiesInterruptions.c,165 :: 		TMR1L = 0XDC;
0x00A2	0x0EDC      	MOVLW       220
0x00A4	0x6ECE      	MOVWF       TMR1L 
;unit05_02_highLowPrioritiesInterruptions.c,167 :: 		PIR1.TMR1IF = 0;                // Clear Flag
0x00A6	0x909E      	BCF         PIR1, 0 
;unit05_02_highLowPrioritiesInterruptions.c,169 :: 		}
L_INTERRUPTION_LOW1:
;unit05_02_highLowPrioritiesInterruptions.c,170 :: 		}
L_end_INTERRUPTION_LOW:
L__INTERRUPTION_LOW11:
0x00A8	0x5017      	MOVF        ___Low_saveBSR, 0 
0x00AA	0x6EE0      	MOVWF       BSR 
0x00AC	0x5016      	MOVF        ___Low_saveSTATUS, 0 
0x00AE	0x6ED8      	MOVWF       STATUS 
0x00B0	0x3A15      	SWAPF       ___Low_saveWREG, 1 
0x00B2	0x3815      	SWAPF       ___Low_saveWREG, 0 
0x00B4	0x0010      	RETFIE      0
; end of _INTERRUPTION_LOW
_main:
;unit05_02_highLowPrioritiesInterruptions.c,231 :: 		void main() {
;unit05_02_highLowPrioritiesInterruptions.c,232 :: 		configMCU();                      // configure CHIP
0x00B6	0xDFC7      	RCALL       _configMCU
;unit05_02_highLowPrioritiesInterruptions.c,233 :: 		configTMR0();                     // configure TMR0 master ints keys
0x00B8	0xDFCB      	RCALL       _configTMR0
;unit05_02_highLowPrioritiesInterruptions.c,234 :: 		configTMR1();                     // configure TMR1 master ints keys
0x00BA	0xDFBC      	RCALL       _configTMR1
;unit05_02_highLowPrioritiesInterruptions.c,235 :: 		configGlobalInterruption();       // Configure globals ints
0x00BC	0xDFAF      	RCALL       _configGlobalInterruption
;unit05_02_highLowPrioritiesInterruptions.c,236 :: 		configIndividualVctTMR0();        // configure TMR0 indiviadual vectors for each time
0x00BE	0xDFB2      	RCALL       _configIndividualVctTMR0
;unit05_02_highLowPrioritiesInterruptions.c,237 :: 		configIndividualVctTMR1();        // configure TMR1 indiviadual vectors for each time
0x00C0	0xDFB5      	RCALL       _configIndividualVctTMR1
;unit05_02_highLowPrioritiesInterruptions.c,241 :: 		while(TRUE)
L_main3:
;unit05_02_highLowPrioritiesInterruptions.c,243 :: 		PORTD.RD5 = ~LATD.RD5;
0x00C2	0xBA8C      	BTFSC       LATD, 5 
0x00C4	0xD002      	BRA         L__main19
0x00C6	0x8A83      	BSF         PORTD, 5 
0x00C8	0xD001      	BRA         L__main20
L__main19:
0x00CA	0x9A83      	BCF         PORTD, 5 
L__main20:
;unit05_02_highLowPrioritiesInterruptions.c,244 :: 		Delay_ms(1000);             // Killing processor here!
0x00CC	0x0E0B      	MOVLW       11
0x00CE	0x6E0B      	MOVWF       R11, 0
0x00D0	0x0E26      	MOVLW       38
0x00D2	0x6E0C      	MOVWF       R12, 0
0x00D4	0x0E5D      	MOVLW       93
0x00D6	0x6E0D      	MOVWF       R13, 0
L_main5:
0x00D8	0x2E0D      	DECFSZ      R13, 1, 0
0x00DA	0xD7FE      	BRA         L_main5
0x00DC	0x2E0C      	DECFSZ      R12, 1, 0
0x00DE	0xD7FC      	BRA         L_main5
0x00E0	0x2E0B      	DECFSZ      R11, 1, 0
0x00E2	0xD7FA      	BRA         L_main5
0x00E4	0x0000      	NOP
0x00E6	0x0000      	NOP
;unit05_02_highLowPrioritiesInterruptions.c,246 :: 		}
0x00E8	0xD7EC      	BRA         L_main3
;unit05_02_highLowPrioritiesInterruptions.c,247 :: 		}
L_end_main:
0x00EA	0xD7FF      	BRA         $+0
; end of _main
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x001C       [8]    _configGlobalInterruption
0x0024       [8]    _configIndividualVctTMR0
0x002C       [8]    _configIndividualVctTMR1
0x0034      [18]    _configTMR1
0x0046      [10]    _configMCU
0x0050      [18]    _configTMR0
0x0062      [26]    _INTERRUPTION_HIGH
0x007C      [58]    _INTERRUPTION_LOW
0x00B6      [54]    _main
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x0000       [1]    R0
0x0001       [1]    INTERRUPTION_LOW_counter_L0
0x0001       [1]    R1
0x0002       [1]    R2
0x0003       [1]    R3
0x0004       [1]    R4
0x0005       [1]    R5
0x0006       [1]    R6
0x0007       [1]    R7
0x0008       [1]    R8
0x0009       [1]    R9
0x000A       [1]    R10
0x000B       [1]    R11
0x000C       [1]    R12
0x000D       [1]    R13
0x000E       [1]    R14
0x000F       [1]    R15
0x0010       [1]    R16
0x0011       [1]    R17
0x0012       [1]    R18
0x0013       [1]    R19
0x0014       [1]    R20
0x0015       [1]    ___Low_saveWREG
0x0016       [1]    ___Low_saveSTATUS
0x0017       [1]    ___Low_saveBSR
0x0F83       [1]    PORTD
0x0F8C       [1]    LATD
0x0F95       [1]    TRISD
0x0F9D       [1]    PIE1
0x0F9E       [1]    PIR1
0x0F9F       [1]    IPR1
0x0FC1       [1]    ADCON1
0x0FCD       [1]    T1CON
0x0FCE       [1]    TMR1L
0x0FCF       [1]    TMR1H
0x0FD0       [1]    RCON
0x0FD5       [1]    T0CON
0x0FD6       [1]    TMR0L
0x0FD7       [1]    TMR0H
0x0FD8       [1]    STATUS
0x0FD9       [1]    FSR2L
0x0FDA       [1]    FSR2H
0x0FDE       [1]    POSTINC2
0x0FE0       [1]    BSR
0x0FE1       [1]    FSR1L
0x0FE2       [1]    FSR1H
0x0FE4       [1]    PREINC1
0x0FE6       [1]    POSTINC1
0x0FE7       [1]    INDF1
0x0FE8       [1]    WREG
0x0FE9       [1]    FSR0L
0x0FEA       [1]    FSR0H
0x0FEE       [1]    POSTINC0
0x0FF1       [1]    INTCON2
0x0FF2       [1]    INTCON
0x0FF3       [1]    PRODL
0x0FF4       [1]    PRODH
0x0FF5       [1]    TABLAT
0x0FF6       [1]    TBLPTRL
0x0FF7       [1]    TBLPTRH
0x0FF8       [1]    TBLPTRU
